continue
request.url
orginal_fullpat
request.request_uri
request.request_url
request.orginal_url
request
continue
current_user=User.last
continue
Float::NAN
NaN
NAN
nil
current_user.nil?.nil?
current_user.nil?
current_user.type
current_user
current_user=User.last
current_user
current_usear
continue
request.env["PATH_INFO"]
continue
request.env["PATH_INFO"]
request.env.PATH_INFO
request.env
request[0]
request.first
request["PATH_INFO"
request[PATH_INFO]
request.PATH_INFO
request
request.orginal_url
request.orgi
request
continue
params["moderator"]
params["admin"]
params["admin"].true?
params["admin"]?
params["admin"]
params.admin
params.admin?
params
params[:commit]
status
continue
auth_hash
auth_hash['info']
auth_hash['info']['urls'][user.provider.capitalize]
continue
contine
User.last
User.from_omniauth(request.env['omniauth.auth'])
request.env['omniauth.auth']
User.from_omniauth(request.env['omniauth.auth'])
@user = User.from_omniauth(request.env['omniauth.auth'])
continue
@topic.op
@topic.posts.first
@topic.posts
@topic.first
current_user
continue
@board
continue
current_url
continue
current_url
visible_boards
continue
url_for :only_path => false, :params => params.merge(overwrite)
orginal_fullpath
base_url
request
continue
fullpath
current_url
@request
request
@board
@b
@board
continue
@boards
continue
p=@p
continue
@topic.save
continue
@topic.save
@topic.id
@topic
p["posts_attributes"]["0"]["topic_id"]
p["posts_attributes"]["0"]
p["posts_attributes"]
p=topic_params
continue
@post.valid?
@post
continue
topic_params["posts_attributes"]["0"]
topic_params["posts_attributes"].first.first
topic_params["posts_attributes"].first
topic_params["posts_attributes"]
topic_params
continue
topic_params["posts_attributes"].first
topic_params["posts_attributes"]
topic_params[]
topic_params->
topic_params."post_attributes"
topic_params.post_attributes
topic_params["post_attributes"]
topic_params[post_attributes]
topic_params
@topic
continue
@t.op.valid?
@t.op
$t.op.valid?
continue
@t.op.valid?
continue
@t.op.valid?
@t.op.validate
@t.op.valid
@t.op.valid?
@t.op
continue
@t.op.valid?
@t.op
continue
@board.topics
continue
@board.topics=[]
@board.topics.size
continue
@board.topics=[]
@board.topics
continue
Board.last.topics
@board.topics
continue
@board.topics.first.delete
@board.topics
continue
@board.topics.first.destroy
@board.topics.first
@board.topics.size
@board.topics
continue
strong_post_params
post_params
@topic.posts
@topic
continue
@board.topics.size
@board.topics
@board
continue
contineu
@new_post
continue
@new_post
continue
@op
continue
@op.id.to_s
@op.id
continue
@op.id
@t.name
@t.board.url
@t.board
@op
@t.id
<%= @t.id %>
@t
continue
current_user
continue
User.from_omniauth(request.env['omniauth.auth'])
continue
User.from_omniauth(request.env['omniauth.auth'])
continue
request.env['omniauth.auth'].info.name
request.env['omniauth.auth']
auth_hash['lollet'].nil?
User.from_omniauth(request.env['omniauth.auth'])
continue
User.from_omniauth()
User
User.from_omniauth(request.env['omniauth.auth'])
continue
User.from_omniauth(request.env['omniauth.auth'])
continue
request.env['omniauth.auth'].info.name
request.env['omniauth.auth'].info
request.env['omniauth.auth'].extra.raw_info.name
request.env['omniauth.auth'].extra.raw_info
request.env['omniauth.auth'].extra.id_token
request.env['omniauth.auth'].extra.id_info
request.env['omniauth.auth'].extra.sub
request.env['omniauth.auth'].extra.name
request.env['omniauth.auth'].extra
request.env['omniauth.auth'].credentials
request.env['omniauth.auth'].raw_info
request.env['omniauth.auth']
request.env['omniauth.auth'].
request.env['omniauth.auth'].uid
request.env['omniauth.auth'].provider
continue
request.env['omniauth.auth'].provider
request.env['omniauth.auth'].name
request.env['omniauth.auth'].uid
request.env['omniauth.auth']
request.env['omniauth']
request.env['omniauth.auth'].inspect
request.env['omniauth.auth'].inspecy
request.env['omniauth.auth']
